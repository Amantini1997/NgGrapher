{"version":3,"sources":["./src/app/animator/animator.component.ts","./src/app/animator/animator.component.html","./src/app/animation-page lazy namespace object","./src/environments/environment.ts","./src/app/code-output/code-output.component.ts","./src/app/code-output/code-output.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/grapher.ts","./src/app/app.module.ts","./src/app/code-input/code-input.component.ts","./src/app/code-input/code-input.component.html","./src/app/animation-page/animation-page.component.ts","./src/app/animation-page/animation-page.component.html","./src/app/generator-page/generator-page.component.ts","./src/app/generator-page/generator-page.component.html","./src/app/app-routing.module.ts","./src/app/instructions-page/instructions-page.component.ts","./src/app/instructions-page/instructions-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Input, Component, HostListener, ChangeDetectorRef } from '@angular/core';\nimport { DataStructure, Grapher, NodeType, Sorter, Node } from '../grapher';\n\n@Component({\n  selector: 'animator',\n  templateUrl: './animator.component.html',\n  styleUrls: ['./animator.component.scss']\n})\nexport class AnimatorComponent {\n\n  grapher: Grapher;\n  nodes: Node[];\n  dataStructure: DataStructure;\n  nodeType: NodeType;\n  originalNodesConfiguration: string;\n\n  scale: number = 1;\n  dragging: boolean;\n  startingX: number;\n  startingY: number;\n  deltaX: number = 0;\n  deltaY: number = 0;\n  newDeltaX: number = 0;\n  newDeltaY: number = 0;\n\n  nodeContainer: HTMLElement;\n  nodeCount: number;\n  initialLeftMargin: number = 0;\n  initialBottomMargin: number = 40;\n  nodeSize: number = 30;\n  fixedValues: string;\n\n  // used for barPlots UI\n  maxValue: number;\n  minValue: number;\n  minBarHeight: number = 5;\n  maxBarHeight: number = 200;\n  barsPadding: number = 5;\n\n  @Input() \n  set newGrapher( grapher: Grapher) {\n    if(!grapher) return;\n    this.grapher = grapher;\n    this.nodes = grapher.getNodes();\n    this.dataStructure = grapher.getDataStructure();\n    this.nodeType = grapher.getNodeType();\n    this.grapher.setSwapFunction(this.swap);\n    this.nodeCount = this.nodes.length;\n    switch(this.dataStructure) {\n      case DataStructure.BarPlot:\n        this.normaliseBarsHeight();\n      break;\n      case DataStructure.List:\n\n      break;\n      case DataStructure.Tree:\n\n      break;\n    }\n    this.cdRef.detectChanges();\n    this.adjustBarPlotPaddings();\n    this.originalNodesConfiguration = document.querySelector(\".fixed-ctn\").innerHTML;\n  }\n  \n  constructor(private cdRef: ChangeDetectorRef) { }\n\n  normaliseBarsHeight() {\n    const values = this.nodes.map(node => node.value);\n    const minValue = Math.min(...values);\n    this.minValue = (minValue > 0) ? 0 : minValue;\n    this.maxValue = Math.abs(Math.max(...values));\n  }\n\n  adjustBarPlotPaddings() {\n    if (!this.nodeContainer) {\n      this.nodeContainer = document.querySelector(\".node-ctn\");\n    }\n    const graphWidth = this.nodeSize * this.nodeCount + this.barsPadding * (this.nodeCount - 1);\n    const containerWidth = Number(getComputedStyle(this.nodeContainer).getPropertyValue(\"width\").slice(0, -2));\n    this.initialLeftMargin = (containerWidth - graphWidth) / 2;\n  }\n\n  normalisedNodeValue(value: number): number {\n    return (value - this.minValue) / (this.maxValue - this.minValue);\n  }\n\n  restoreOriginalConfiguration() {\n    // document.querySelector(\".fixed-ctn\").innerHTML = this.originalNodesConfiguration;\n  }\n\n  swap = (index1: number, index2: number) => {\n    const node1 = document.querySelector(`.node[data-index=\"${index1}\"]`) as HTMLElement;\n    const node2 = document.querySelector(`.node[data-index=\"${index2}\"]`) as HTMLElement;\n    node1.dataset.index = String(index2);\n    node2.dataset.index = String(index1);\n    // this.swapProperty(node1, node2, \"top\");\n    this.swapProperty(node1, node2, \"left\");\n  }\n\n  swapProperty(element1: HTMLElement, element2: HTMLElement, property: string) {\n    const propertyElement1 = getComputedStyle(element1).getPropertyValue(property);\n    const propertyElement2 = getComputedStyle(element2).getPropertyValue(property);\n    element1.style.setProperty(property, propertyElement2);\n    element2.style.setProperty(property, propertyElement1);\n  }\n\n  showVal(event: WheelEvent) {\n    event.preventDefault();\n    const origin = this.getOrigin(event);\n    if (!origin) {\n      console.log(\"TOO MUCH OFFSET\");\n      return;\n    }\n    const updated = this.updateScale(event);\n    if (!updated) {\n      console.log(\"CANNOT SCALE ANYMORE\");\n    }\n  }\n\n  getZoomDirection({deltaY}): 1|-1 {\n    return deltaY < 0 ? 1 : -1;\n  }\n\n  updateScale({deltaY}): boolean {\n    const changingFactor = this.getZoomDirection({deltaY}) * 0.1;\n    if (this.scale + changingFactor < 0.01) return false; \n    this.scale += changingFactor;\n    return true;\n  }\n\n  getOrigin(event: WheelEvent): [number, number] {\n    // it breaks at some point\n    const bounds = this.nodeContainer.getBoundingClientRect();\n    let x = (event.clientX - bounds.left) * .5;\n    let y = (event.clientY - bounds.top) * .25;\n    if (isNaN(x) || isNaN(y)) return null;\n    return [x, y];\n  }\n\n  updatePropertyInPx(element: HTMLElement, property: string, delta: number) {\n    element.style.setProperty(property, delta + \"px\");\n  }\n\n  shiftGraph(event: MouseEvent) {\n    event.preventDefault();\n    if (this.dragging) {\n      this.newDeltaX = event.x - this.startingX;\n      this.newDeltaY = event.y - this.startingY;\n      this.updatePropertyInPx(this.nodeContainer, \"margin-left\", this.newDeltaX + this.deltaX);\n      this.updatePropertyInPx(this.nodeContainer, \"margin-top\", this.newDeltaY + this.deltaY);\n    }\n  }\n\n  setDragging(isDragging: boolean, event: MouseEvent = null) {\n    this.dragging = isDragging;\n    if (isDragging) {\n      this.startingX = event.x;\n      this.startingY = event.y;\n    } else {\n      this.deltaX += this.newDeltaX; \n      this.deltaY += this.newDeltaY; \n    }\n  }\n}\n","<div [ngClass]=\"['fixed-ctn', \n                 dragging ? 'close-hand' : '']\"\n    (mousewheel)=\"showVal($event)\" \n    (mousedown)=\"setDragging(true, $event)\"\n    (mousemove)=\"shiftGraph($event)\" \n    (mouseup)=\"setDragging(false)\"\n\n>\n    <div *ngIf=\"grapher\"\n         class=\"node-ctn\" \n         [ngStyle]=\"{'transform': 'scale(' + scale + ')'}\"\n    >\n        <div [class]=\"dataStructure | lowercase\">\n            <div *ngFor=\"let node of nodes; let nodeIndex = index\"\n                 [attr.data-index]=\"nodeIndex\"\n                 [attr.data-value]=\"node.value\"\n                 [style]=\"\n                          'bottom:' + initialBottomMargin + 'px;' +\n                          'left:' + (nodeIndex * (nodeSize + barsPadding) + initialLeftMargin) + 'px;' +\n                          'height:' + (normalisedNodeValue(node.value) * maxBarHeight + minBarHeight) + 'px;'\n                         \"\n                 [ngClass]=\"[nodeType | lowercase, \n                             node.mode | lowercase,\n                             'node']\"\n            >\n                <span>{{node.value}}</span>\n            </div>\n        </div>\n    </div>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"9w6J\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Options } from '@angular-slider/ngx-slider';\nimport { Component, ElementRef, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { AnimatorComponent } from '../animator/animator.component';\nimport { CodeComment, CodeED } from '../codeInterfaces';\nimport { Grapher, Sorter, DataStructure } from '../grapher';\n\n@Component({\n  selector: 'code-output',\n  templateUrl: './code-output.component.html',\n  styleUrls: ['./code-output.component.scss']\n})\nexport class CodeOutputComponent {\n\n  @ViewChildren(\"executableLine\") executableLines: QueryList<HTMLDivElement>;\n  @ViewChild(\"delay\", {read: ElementRef}) delay: ElementRef;\n  @ViewChild(AnimatorComponent) animator: AnimatorComponent;\n  @Input() \n  set newCodeED(codeED: CodeED) {\n    if(!codeED) return;\n    this.codeED = codeED;\n    this.setUpAnimation();\n  }\n\n  readonly GeneratorFunction = Object.getPrototypeOf(function*(){}).constructor;\n  readonly value: number = 1000;\n  readonly options: Options = {\n      floor: 100,\n      ceil: 2500\n  };\n  readonly CODE_PLACEHOLDER: CodeComment = {\n    code: \"Code will appear here\",\n    comment: \"Comments will appear here\"\n  };\n  \n  currentLine: number;\n  currentComment: string;\n  animationHasStarted: boolean = false; \n  animationIsPaused: boolean = false;\n  animationHasTerminated: boolean = false;\n  animation: any;\n  userInput: string[];\n  grapher: Grapher;\n  codeED: CodeED;\n\n  constructor() { }\n\n  buildInitialGraph() {\n    const initialValuesAsNumbers = this.codeED.initialValues;\n    this.grapher = new Sorter(initialValuesAsNumbers);\n    // TODO Implement buildGraph\n    //// this.grapher.buildGraph();\n  }\n\n  // return dynamic code scoped into a try and catch block\n  tryCatchCode(code: string): string {\n    return `try {${code}} catch(e) { grapher._printError(e) }`;\n  }\n\n  generateJsFunctionFromCode(): Generator {\n    const executableCode = this.codeED.executable;\n    try {\n      return new this.GeneratorFunction(\"grapher\", this.tryCatchCode(executableCode))(this.grapher);\n    } catch(error) {\n      console.error(\"Syntax Error\")\n    }\n  } \n  \n  hiLine(line: any) {\n    const lineNumber = line.line ?? line;\n    this.currentLine = lineNumber;\n\n    //@ts-ignore\n    const comment = line.comment || this.executableLines.toArray()[lineNumber].nativeElement.dataset.comment;\n    this.currentComment = comment;\n  }\n\n  setUpAnimation() {\n    this.clearAnimation();\n    this.restoreOriginalConfiguration();\n  }\n\n  restoreOriginalConfiguration() {\n    this.buildInitialGraph();\n    this.animationHasTerminated = false;\n  }\n\n  clearAnimation() {\n    this.animationIsPaused = false;\n    this.animationHasStarted = false;\n    this.currentLine = null;\n    clearTimeout(this.animation);\n  }\n\n  startAnimation() {\n    this.animationHasStarted = true;\n    var iter = this.generateJsFunctionFromCode();\n    const line = iter.next();\n    this.animationInterval(iter, line);\n  }\n\n  animationInterval = (iter: any, line: any) => {\n    let waitingInterval: number;\n    if (line.done) {\n      // generator is done\n      this.clearAnimation();\n      this.animationHasTerminated = true;\n      return;\n    } \n    \n    if (this.animationIsPaused) {\n      // animation is paused, check for awakes\n      waitingInterval = 100;\n    } else {\n      // animation is running\n      this.hiLine(line.value);\n      line = iter.next();\n      waitingInterval = Number(this.delay.nativeElement.innerHTML);\n    }\n\n    this.animation = setTimeout(this.animationInterval, waitingInterval, iter, line);\n  }\n\n  togglePause() {\n    this.animationIsPaused = !this.animationIsPaused;\n  }\n\n  appendElement() {\n    const structure = this.grapher.getDataStructure();\n    switch(structure) {\n      case DataStructure.BarPlot: {\n\n      }\n      case DataStructure.List: {\n\n      }\n      case DataStructure.Tree: {\n\n      }\n    }\n  }\n}\n\n","<!-- CODE  -->\n<!-- <div id=\"output\"> -->\n    <div class=\"code-highlighter\">\n        <div *ngFor=\"let codeComment of codeED?.displayable || [CODE_PLACEHOLDER]; let lineIndex=index\"\n             #executableLine\n             [class.highlight]=\"lineIndex === currentLine\"\n             [attr.data-comment]=\"codeComment.comment\"\n             [attr.data-lineIndex]=\"lineIndex\"\n             [innerHTML]=\"codeComment.code\">\n        </div>\n    </div>\n<!-- </div> -->\n\n<div class=\"comment-box\">\n    {{currentComment || CODE_PLACEHOLDER.comment}}\n</div>\n\n<animator [newGrapher]=\"grapher\"></animator>\n\n<div id=\"player\">\n    <div>\n        <span>\n            Value (ms):&nbsp;\n        </span>\n        <span #delay>\n            {{slider.value}}\n        </span>\n        <ngx-slider #slider \n                    id=\"slider\"\n                    [value]=\"value\" \n                    [options]=\"options\">\n        </ngx-slider>\n\n        \n        <button *ngIf=\"!animationHasStarted\" \n                [disabled]=\"!codeED || animationHasTerminated\"\n                (click)=\"startAnimation()\">\n            START\n        </button>\n\n        <div *ngIf=\"animationHasStarted\" \n             class=\"controller\" \n             (click)=\"togglePause()\">\n            <ng-container *ngIf=\"animationIsPaused; else pause\">\n                <img src=\"assets/img/play.svg\">\n            </ng-container>\n            <ng-template #pause>\n                <img src=\"assets/img/pause.svg\">\n            </ng-template>\n        </div>\n\n        <button [disabled]=\"!codeED\" (click)=\"setUpAnimation()\" \n        >\n        <!-- [disabled]=\"!animationHasStarted\" -->\n            RESET\n        </button>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'GrapherJS';\n}\n","<header>\r\n    <nav>\r\n        <ul class=\"pages\">\r\n            <li><a routerLink=\"/instructions\">Instructions</a></li>\r\n            <li><a routerLink=\"/generator\">Generator</a></li>\r\n            <li><a routerLink=\"/animation\">Animation</a></li>\r\n        </ul>\r\n    </nav>\r\n</header>\r\n<router-outlet></router-outlet>","// declare type NodeShape = \"Circle\" | \"Square\" | \"Bar\";\r\n// declare type DataStructure = \"Tree\" | \"List\" | \"BarPlot\";\r\n// declare type Edge = \"None\" | \"PlainEdge\" | \"DirectedEdge\" | \"DoublyDirectedEdge\";\r\n\r\n// declare type NodeType = \"Circle\" | \"Square\" | \"Bar\";\r\n\r\n// declare type DataStructure = \"Tree\" | \"List\" | \"BarPlot\";\r\n\r\n// declare type EdgeType = \"None\" | \"SinglePlainEdge\" | \"SingleDirectedEdge\" | \"DoubleDirectedEdge\"\r\n\r\n\r\nenum NodeType {\r\n    Circle = \"Circle\",\r\n    Square = \"Square\",\r\n    Bar = \"Bar\"\r\n}\r\n\r\nenum DataStructure {\r\n    Tree = \"Tree\",\r\n    List = \"List\",\r\n    BarPlot = \"BarPlot\"\r\n}\r\n\r\nenum EdgeType {\r\n    None = \"None\",\r\n    SinglePlainEdge = \"SinglePlainEdge\",\r\n    SingleDirectedEdge = \"SingleDirectedEdge\",\r\n    DoubleDirectedEdge = \"DoubleDirectedEdge\"\r\n}\r\n\r\n// interface GrapherJSON {\r\n//     nodeType: NodeType,\r\n//     edgeType: EdgeType,\r\n//     structure: DataStructure,\r\n//     nodes: Array<any>,\r\n//     edges: Array<Edge>,\r\n//     initialValues: Array<number>,\r\n//     swap: Function\r\n// }\r\n\r\ndeclare type Edge = [any, any];\r\n\r\nenum NodeSelectionMode {\r\n    None = \"None\",\r\n    Selected = \"Selected\",\r\n    Compared = \"Compared\"\r\n}\r\n\r\ninterface Node {\r\n    id: number,\r\n    value: number,\r\n    mode: NodeSelectionMode \r\n}\r\n\r\nclass Grapher {\r\n    private nodeType: NodeType;\r\n    private edgeType: EdgeType;\r\n    private structure: DataStructure;\r\n    private nodes: Array<Node>;    \r\n    private edges: Array<Edge>;\r\n    private swapFunction: Function;\r\n    private lastIndex: number = 0;\r\n    private virtualIds: Array<Number>;\r\n\r\n    userInputIsAllowed: boolean = true;\r\n\r\n    constructor (\r\n        nodeType?: NodeType,\r\n        edgeType?: EdgeType,\r\n        structure?: DataStructure,\r\n        initialValues?: Array<any>\r\n    ) {\r\n        this._setNodeType(nodeType);\r\n        this._setEdgeType(edgeType);   \r\n        this._setDataStructure(structure);\r\n        initialValues = initialValues || [];\r\n        this.nodes = initialValues.map(this._newNode) || [];\r\n        this.virtualIds = [...Array(this.nodes.length).keys()]\r\n    }\r\n\r\n    _newNode = (value: number): Node => {\r\n        return {\r\n            id: this.lastIndex++,\r\n            value: value,\r\n            mode: NodeSelectionMode.None\r\n        }\r\n    }\r\n\r\n    _setNodeType(nodeType: NodeType) {\r\n        if (NodeType[nodeType]) {\r\n            this.nodeType = nodeType;\r\n        } else {\r\n            throw new Error(this.getErrorMessage(nodeType, \"NodeType\", NodeType));\r\n        }\r\n    }\r\n\r\n    getNodeType(): NodeType {\r\n        return this.nodeType;\r\n    }\r\n\r\n    getNodes(): Array<Node> {\r\n        return this.nodes;\r\n    }\r\n\r\n    _getNodeById(id: number): Node {\r\n        const virtualId = this.virtualIds[id];\r\n        const node = this.nodes.find(node => node.id == virtualId);\r\n        return node;\r\n    }\r\n\r\n    setNodeModeSelected(id: number) {\r\n        const node = this._getNodeById(id);\r\n        node.mode = NodeSelectionMode.Selected;\r\n    }\r\n\r\n    setNodeModeCompared(id: number) {\r\n        const node = this._getNodeById(id);\r\n        node.mode = NodeSelectionMode.Compared\r\n    }\r\n\r\n    setNodeModeNone(id: number) {\r\n        const node = this._getNodeById(id);\r\n        node.mode = NodeSelectionMode.None;\r\n    }\r\n\r\n    getValues(): Array<number> {\r\n        return this.nodes.map(node => node.value);\r\n    }\r\n\r\n    _setEdgeType(edgeType: EdgeType) {\r\n        if (EdgeType[edgeType]) {\r\n            this.edgeType = edgeType;\r\n        } else {\r\n            throw new Error(this.getErrorMessage(edgeType, \"EdgeType\", EdgeType));\r\n        }\r\n    }\r\n\r\n    getEdgeType(): EdgeType {\r\n        return this.edgeType;\r\n    }\r\n\r\n    getEdges(): Array<Edge> {\r\n        return this.edges;\r\n    }\r\n\r\n    _setDataStructure(structure: DataStructure) {\r\n        if (DataStructure[structure]) {\r\n            this.structure = structure;\r\n        } else {\r\n            throw new Error(this.getErrorMessage(structure, \"DataStructure\", DataStructure));\r\n        }\r\n    }\r\n\r\n    getDataStructure(): DataStructure {\r\n        return this.structure;\r\n    }\r\n\r\n    getElementAt(index: number): Node {\r\n        return this.nodes[index];\r\n    }\r\n\r\n    setSwapFunction(swapFunction: Function) {\r\n        this.swapFunction = swapFunction;\r\n    }\r\n\r\n    swapVirtualIds(index1: number, index2: number) {\r\n        const temp = this.virtualIds[index1];\r\n        this.virtualIds[index1] = this.virtualIds[index2];\r\n        this.virtualIds[index2] = temp;\r\n    }\r\n\r\n    swap(index1: number, index2: number) {\r\n        this.swapFunction(index1, index2);\r\n        this.swapVirtualIds(index1, index2);\r\n    }\r\n\r\n    blockUserInput() {\r\n        this.userInputIsAllowed = false;\r\n    }\r\n\r\n    push(node: any) {\r\n        this.nodes.push(node);\r\n        // this.virtualIds[]\r\n    }\r\n\r\n    pop(): any {\r\n        return this.nodes.pop();\r\n    }\r\n\r\n    unshift(node: any) {\r\n        this.nodes.unshift(node);\r\n    }\r\n\r\n    shift(): any {\r\n        return this.nodes.shift();\r\n    }\r\n\r\n    insertAt(node: any, index: number) {\r\n        this.nodes.splice(index, 0, node);\r\n    }\r\n\r\n    removeAt(index: number): any {\r\n        return this.nodes.splice(index, index)[0];\r\n    }\r\n\r\n    noShiftRemoveAt(index: number): any {\r\n        const removedNode = this.nodes[index];\r\n        delete this.nodes[index];\r\n        return removedNode;\r\n    }\r\n\r\n    replaceAt(node: any, index: number): any {\r\n        return this.nodes.splice(index, 1, node)[0];\r\n    }\r\n\r\n    // buildGraph(): GrapherJSON {\r\n    //     // all the fields must be set to a value\r\n    //     if (! (this.nodeType && this.edgeType && this.structure)) {\r\n    //         throw new Error(\"All the fields must be set to a non-null value\");\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    getErrorMessage(obj: any, enumName: string, enumList: any): string {\r\n        return `Expected object of type ${enumName}, but received ${obj}\r\nAllowed types are: ${Object.keys(enumList).join(\", \")}`;\r\n    }\r\n\r\n    _printError(error: Error) {\r\n        const ERROR_STACK_POSITION = 1;\r\n        // the difference between the user code, and the code\r\n        // used by the browser to generate a dynamic function\r\n        // e.g. function anonymous() { ...\r\n        const BOILER_CODE_LENGTH = 2;\r\n        const message = error.message;\r\n        // the second row of the error.stack object is the \r\n        // row specifying the specific error\r\n        const error_row = error.stack.split(\"\\n\")[ERROR_STACK_POSITION];\r\n        const error_row_elements = error_row.split(\":\");\r\n        const col_error = error_row_elements.pop().slice(0, -1);\r\n        const line_error = error_row_elements.pop() + BOILER_CODE_LENGTH;\r\n    }\r\n\r\n}\r\n\r\nclass Sorter extends Grapher {\r\n    constructor(initialValues?: Array<any>) {\r\n        super(\r\n            NodeType.Bar,\r\n            EdgeType.None,\r\n            DataStructure.BarPlot,\r\n            initialValues\r\n        );\r\n    }\r\n}\r\n\r\nclass BinaryTree extends Grapher {\r\n    constructor(initialValues?: Array<any>) {\r\n        super(\r\n            NodeType.Circle,\r\n            EdgeType.SinglePlainEdge,\r\n            DataStructure.Tree,\r\n            initialValues\r\n        );\r\n    }\r\n}\r\n\r\nclass List extends Grapher {\r\n    constructor(initialValues?: Array<any>) {\r\n        super(\r\n            NodeType.Square,\r\n            EdgeType.None,\r\n            DataStructure.List,\r\n            initialValues\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    Grapher,\r\n    Sorter,\r\n    BinaryTree,\r\n    List,\r\n    Node,\r\n    NodeType,\r\n    NodeSelectionMode,\r\n    EdgeType,\r\n    DataStructure\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CodeInputComponent } from './code-input/code-input.component';\nimport { CodeOutputComponent } from './code-output/code-output.component';\nimport { GeneratorPageComponent } from './generator-page/generator-page.component';\nimport { FormsModule } from '@angular/forms';\nimport { AnimationPageComponent } from './animation-page/animation-page.component';\nimport { InstructionsPageComponent } from './instructions-page/instructions-page.component';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { AnimatorComponent } from './animator/animator.component';\n\n \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodeInputComponent,\n    CodeOutputComponent,\n    GeneratorPageComponent,\n    AnimationPageComponent,\n    InstructionsPageComponent,\n    AnimatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CodemirrorModule,\n    NgxSliderModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CodeComment, CodeED } from '../codeInterfaces';\nimport { DataStructure, NodeType } from '../grapher';\n\nimport bubbleSort from '../../assets/templates/bubbleSort.json';\nimport { throws } from 'assert';\n\n@Component({\n  selector: 'code-input',\n  templateUrl: './code-input.component.html',\n  styleUrls: ['./code-input.component.scss']\n})\nexport class CodeInputComponent {\n  \n  @Output() generate = new EventEmitter<CodeED>();\n  @ViewChild(\"codeEditor\") codeEditor;\n  @ViewChild(\"initialValues\", {read: ElementRef}) initialValuesInput: ElementRef;\n  @ViewChild(\"numericalInput\", {read: ElementRef}) numericalInput: ElementRef;\n\n  readonly CODE_PLACEHOLDER = \"insert code here\";\n  readonly COMMENT_PLACEHOLDER = \"insert comment here\";\n  readonly DEFAULT_INITIAL_VALUES = [9, 1, 5, 7, 2, 4, 3]; \n  readonly NUMERICAL_INPUT_REGEX = /^\\d+(\\.\\d){0,1}(\\s*\\,\\s*\\d+(\\.\\d){0,1})*\\s*$/;\n\n  readonly editorOptions = {\n    mode:  \"javascript\",\n    lineNumbers: true,\n    theme: 'material'\n  };\n  readonly EDITOR_HEIGHT = \"450px\";\n\n  inputValuesIsValid: boolean = false;\n  initialValuesAsString: string = \"\";\n\n  code: string = `/** \n*  Use this space to write the logic of the program, i.e. the javascript function \n*  that operates the algorithm. Use the \"yield\" keyword to tell the program \n*  which line to highlight at each stage.\n* e.g.\n*      yield 0 \n*  This will highlight the 0th line (remember the program uses the array notation,\n*  so the first element is the element at position 0)\n* \n*  It is possible to return dynamic comments, for example if a the comment\n*  depends on the value of a variable. In such case use the keyword yield to return\n*  a JSON object of the form:\n*  yield {\n*      line: 0,\n*      comment: \"checking if element \" + x + \" >= \" + y\n*  }\n* \n*  Write only the body of the function, do NOT include the function head\n*  Avoid using comments and code on the same line as this would create a parsing issue\n*  eg.\n*     ==== GOOD ====\n*      //increment counter\n*      i = i + 1\n*     \n*     ==== BAD ====\n*      i = i + 1 //increment counter\n*/ \n\n\n// highlight the function call\nyield 0\n\nlet a = 34\nlet c = 16\n\n// highlight the console.log()\nyield {\n    line: 1, \n    comment: \"printing a + c = \" + (a + c)\n} \nconsole.log(\"Hello, World!\");\n\n// highlight the end of the function\nyield 2\n\n\n`;\n\n  lines: CodeComment[] = [];\n  delay = 1000;\n\n  constructor() {\n    this.lines = [\n      {\n        code: 'function example()', \n        comment: ''\n      },\n      {\n        code: '&emsp;console.log(\"Hello, World!\");', \n        comment: ''\n      },\n      {\n        code: '}', \n        comment: ''\n      },\n    ];\n\n    const EMPTY_LINES = 15;\n    Array(EMPTY_LINES).fill(0).forEach(_ => this.lines.push({\n      code: '', \n      comment: ''\n    }));\n  }\n\n  // Correctly set the size of the code editor\n  ngAfterViewInit() {\n    this.codeEditor.codeMirror.setSize(null, this.EDITOR_HEIGHT);\n  }\n\n  deleteCodeCommentLine(lineIndex: number) {\n      this.lines.splice(lineIndex, 1);\n  }\n\n  addCodeCommentLine(lineIndex: number = this.lines.length) {\n    window.event.preventDefault();\n    const nextLineIndex = lineIndex + 1\n    this.lines.splice(nextLineIndex, 0, {\n      code: '',\n      comment: ''\n    });\n    window.requestAnimationFrame(() => this.focusOnLine(nextLineIndex));\n  }\n\n  focusOnLine(lineIndex: number) {\n    (<HTMLElement>document.querySelector(`.line-code-${lineIndex}`)).focus();\n  }\n\n  indentCode(lineIndex: number, inverse=false) {\n    window.event.preventDefault();\n\n    // ! Do not replace INDENT with normal space\n    const INDENT = \" \";\n    let line = document.querySelector(`.line-code-${lineIndex}`);\n    if(inverse) {\n      if(line.innerHTML.startsWith(INDENT)) {\n        line.innerHTML = line.innerHTML.replace(INDENT, \"\");\n      }\n    } else {\n      line.innerHTML = INDENT + line.innerHTML;\n    }\n  }\n\n  getCodeCommentLines(): CodeComment[] {\n    const lines = document.querySelectorAll(\"#lines-table__body .code-comment-ctn\") as any;\n    return [...lines].map(line => {\n      return {\n        code: this.extractLineValue(line, \"code\"),\n        comment: this.extractLineValue(line, \"comment\")\n      };\n    });\n  }   \n\n  extractLineValue(parent: HTMLElement, elementName: string) {\n    return parent.querySelector(`[class^=\"line-${elementName}\"]`).innerHTML;\n  }\n\n  getConfig(): CodeED {\n    const executableCode = this.getExecutableCode();\n    const filteredDisplayableCode = this.getFilteredDisplayableCode();\n    const initialValues = this.getInitialValues();\n    const config: CodeED = {\n      executable: executableCode,\n      displayable: filteredDisplayableCode,\n      initialValues: initialValues,\n      // TODO make these dynamic\n      nodeType: NodeType.Bar,\n      structure: DataStructure.BarPlot\n    };\n    return config;\n  }\n\n  getInitialValues(): any[] {\n    if (!this.inputValuesIsValid) {\n      throw(\"The input values are not valid, please fix them and try again\");\n    }\n    // const castToNumber = (<HTMLInputElement> this.numericalInput.nativeElement).checked;\n    const valuesAsString = (<HTMLInputElement> this.initialValuesInput.nativeElement).value;\n    let valuesAsArray = valuesAsString.split(\",\")\n                                      .map(value => value.trim())\n                                      .map(Number);\n    // } else {\n    //   valuesAsArray.map(value => \"\\\"\" + value + \"\\\"\");\n    // }\n    return valuesAsArray || this.DEFAULT_INITIAL_VALUES;\n  }\n\n  getCodeED() {\n    const config = this.getConfig();\n    this.generate.emit(config);\n  }\n\n  getFilteredDisplayableCode(): CodeComment[] {\n    const lines = this.getCodeCommentLines();\n    return lines.map(this.deletePlaceholders)\n                     .filter(this.codeCommentBlockIsRemovable)\n                     .map(this.sanitiseCodeCommentBlock)\n  }\n  \n  sanitiseCodeCommentBlock = ({code, comment}): CodeComment => {\n    return {\n      code: this.sanitiseText(code),\n      comment: this.sanitiseText(comment),\n    };\n  }\n\n  sanitiseText = (text: string): string => {\n    //@ts-ignore\n    return text.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\")\n  }\n\n  deletePlaceholders = ({code, comment}: CodeComment): CodeComment => {\n    if (code === this.CODE_PLACEHOLDER) code = \"\";\n    if (comment === this.COMMENT_PLACEHOLDER) comment = \"\";\n    return {\n      code,\n      comment\n    };\n  }\n\n  codeCommentBlockIsRemovable({code}: CodeComment): boolean {\n    return code !== \"\";\n  }\n\n  validateInitialValues(inputValues: string = null) {\n    const initialValuesInput = <HTMLInputElement> this.initialValuesInput.nativeElement;\n    inputValues = inputValues || initialValuesInput.value;\n    const dataIsValid = this.NUMERICAL_INPUT_REGEX.test(inputValues);\n    if(dataIsValid) {\n      initialValuesInput.classList.remove(\"wrong\");\n    } else {\n      initialValuesInput.classList.add(\"wrong\");\n    }\n    this.inputValuesIsValid = dataIsValid;\n  }\n\n  getExecutableCode(): string {\n    const editor = this.codeEditor.codeMirror;\n    const rawExecutableCode = editor.getValue();\n    // TODO: decide whether to remove comments\n    // console.log(rawExecutableCode)\n    // const uncommentedExecutableCode = this.removeCommentLines(rawExecutableCode);\n    // const executableCode = uncommentedExecutableCode.join(\"\\n\");\n    const executableCode = rawExecutableCode;\n    return executableCode;\n  }\n  \n  removeCommentLines(code: string): string[] {\n    // remove comments from code\n    const SINGLE_LINE_COMMENT = \"//\";\n    const MULTIPLE_LINE_COMMENT_OPEN = \"/*\";\n    const MULTIPLE_LINE_COMMENT_CLOSE = \"*/\";\n    let isMultipleLineComment = false;\n    let uncommentedCode = [];\n    const lines = code.split(\"\\n\");\n    for(let line of lines) {\n      const trimmedLine = line.trim();\n      // line is the start of a multiple line comment\n      if (trimmedLine.startsWith(MULTIPLE_LINE_COMMENT_OPEN)) {\n        isMultipleLineComment = true;\n      }\n      // line is a comment\n      if (isMultipleLineComment || trimmedLine.startsWith(SINGLE_LINE_COMMENT)) {\n        // line is the end of a multiple line comment\n        if (trimmedLine.endsWith(MULTIPLE_LINE_COMMENT_CLOSE)) {\n          isMultipleLineComment = false;\n        }\n        continue;\n      }\n      // remove empty lines\n      if (trimmedLine === \"\") {\n        continue;\n      }\n      uncommentedCode.push(line);\n    }\n    return uncommentedCode;\n  }\n\n  downloadConfig() {\n    const config = this.getConfig();\n    const a = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(config)], { type: \"text/json\" });\n    a.href = URL.createObjectURL(file);\n    a.download = \"animator_config.json\";\n    a.click();\n  }\n\n  loadConfig() {\n    // TODO make this dynamic\n    // const config = JSON.parse(\"file\")   \n    let config = bubbleSort; \n    this.code = config.executable\n    this.lines = config.displayable;  \n    this.initialValuesAsString = config.initialValues.join(\", \"); \n    this.validateInitialValues(this.initialValuesAsString);\n  }\n}\n\n","<div class=\"code\">\n    <!-- Code to be disaplyed -->\n    <div id=\"display-code\">\n        <div id=\"lines-table\">\n            \n            <div id=\"lines-table__head\">\n                <div class=\"raw-line\">\n                    <div class=\"head-counter\">#</div>\n                    <div class=\"code-comment-ctn\">\n                        <div class=\"line-code\">Code</div>\n                        <div class=\"line-comment\">Comment</div>\n                    </div>\n                </div>\n            </div>\n            \n            <div id=\"lines-table__body\" #codeCommentBlock>\n                <div class=\"raw-line\" *ngFor=\"let line of lines; let lineCount=index\">\n                    <div class=\"counter\">{{lineCount}}</div>\n                    <div class=\"code-comment-ctn\">\n                        <div class=\"line-code-{{lineCount}}\" contenteditable \n                            [attr.data-placeholder]=\"CODE_PLACEHOLDER\"\n                            (keydown.enter)=\"addCodeCommentLine(lineCount)\" \n                            (keydown.tab)=\"indentCode(lineCount)\"\n                            (keydown.shift.tab)=\"indentCode(lineCount, true)\"\n                            [innerHTML]=\"line.code\"\n                        >\n                        </div>\n                        <div class=\"line-comment\" contenteditable \n                            [attr.data-placeholder]=\"COMMENT_PLACEHOLDER\"\n                            [innerHTML]=\"line.comment\"\n                        >\n                        </div>\n                    </div>\n                    <div class=\"bin\" (click)=\"deleteCodeCommentLine(lineCount)\">\n                        <img src=\"assets/img/red_bin.png\">\n                    </div>\n                </div>\n            </div>\n\n            <div id=\"lines-table__btn\">\n                <button (click)=\"addCodeCommentLine()\">New Line</button> \n                <button id=\"display-code__btn\" \n                        (click)=\"getCodeED()\"\n                        [disabled]=\"!inputValuesIsValid\"\n                >\n                    Generate Code\n                </button>\n            </div>\n        </div>       \n    </div>\n\n    <!-- Monaco Code Editor -->\n    <ngx-codemirror\n        #codeEditor\n        id=\"codeEditor\"\n        [(ngModel)]=\"code\"\n        [options]=\"editorOptions\"\n    >\n    </ngx-codemirror>\n</div>\n<div class=\"config-btn\">\n    <button (click)=\"downloadConfig()\">Save Configuration</button>\n    <button (click)=\"loadConfig()\">Load Configuration</button>\n    <div>\n        <select id=\"data-structure\">\n            <!-- <optgroup> -->\n                <option>\n                    BarPlot\n                </option>\n                <option>\n                    List\n                </option>\n            <!-- </optgroup> -->\n        </select>\n    </div>\n    <div>\n        <label for=\"initial-values\">Initial Values:</label>\n        <input id=\"initial-values\" \n               #initialValues\n               type=\"text\" \n               placeholder=\"e.g. 1, 5, 2, 6, 8, 3\"\n               (keyup)=\"validateInitialValues()\"\n               [value]=\"initialValuesAsString\"\n        >\n    </div>\n    <!-- <div>\n        <label for=\"numerical-input\">Input Is Numerical</label>\n        <input id=\"numerical-input\" #numericalInput type=\"checkbox\" checked>\n    </div> -->\n</div>","import { Component } from '@angular/core';\nimport { CodeED } from '../codeInterfaces';\nimport * as templateRaw from '../../assets/templates.json';\n\n@Component({\n  templateUrl: './animation-page.component.html',\n  styleUrls: ['./animation-page.component.scss']\n})\nexport class AnimationPageComponent {\n\n  config: CodeED;\n  templateOptions: JSON;\n  readonly TEMPLATES_PATH = \"/assets/templates/\";\n\n\n  constructor() { \n    this.templateOptions = templateRaw.default; \n  }\n\n  loadConfig(event: any) {\n    const loadableFile = event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.onload = fileLoadedEvent => {\n      const configFile = fileLoadedEvent.target.result as string;\n      this.config = JSON.parse(configFile);\n      console.log(this.config)\n    };\n    fileReader.readAsText(loadableFile, \"UTF-8\");\n  }\n\n  async loadTemplateConfig(templatePath: string) {\n    console.log(this.TEMPLATES_PATH + templatePath)\n    await import(this.TEMPLATES_PATH + templatePath).then(config => {\n      console.log(config)\n      this.config = config;\n    });\n  }\n}\n","<h1>Welcome to the Animation Page!</h1>\r\n\r\n<hr>\r\n<ng-template *ngIf=\"config; else import\">\r\n    <code-output></code-output>\r\n    <div>nel</div>\r\n</ng-template>\r\n<hr>\r\n\r\n<ng-template #import>\r\n    <div class=\"config-ctn\">\r\n        <label for=\"input\">Import Configuration: &nbsp;</label>\r\n        <input id=\"input\" type=\"file\" (change)=\"loadConfig($event)\">\r\n        <hr>\r\n        <label for=\"template\">Or choose an existing one: &nbsp;</label>\r\n        \r\n        <select #template id=\"template\">\r\n            <optgroup  *ngFor=\"let templateOption of templateOptions | keyvalue\" \r\n                       [label]=\"templateOption.key | titlecase\"\r\n            >\r\n                <option *ngFor=\"let algorithm of templateOption.value | keyvalue\" \r\n                        [value]=\"algorithm.value\"\r\n                >\r\n                        {{algorithm.key}}\r\n                </option>\r\n            </optgroup>\r\n        </select>\r\n        <button (click)=\"loadTemplateConfig(template.value)\">\r\n            Confirm Template\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<code-output [newCodeED]=\"config\"></code-output>","import { Component } from '@angular/core';\nimport { CodeED } from '../codeInterfaces';\n\n@Component({\n  selector: 'generator-page',\n  templateUrl: './generator-page.component.html',\n  styleUrls: ['./generator-page.component.scss']\n})\nexport class GeneratorPageComponent{\n\n  codeED: CodeED;\n\n  renderCode(codeED: CodeED) {\n    this.codeED = codeED;\n  }\n}\n","<h1>Welcome to the Generator Page!</h1>\n\n<code-input (generate)=\"renderCode($event)\"></code-input>\n<code-output [newCodeED]=\"codeED\"></code-output> ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnimationPageComponent } from './animation-page/animation-page.component';\nimport { GeneratorPageComponent } from './generator-page/generator-page.component';\nimport { InstructionsPageComponent } from './instructions-page/instructions-page.component';\n\nconst routes: Routes = [\n  {path: 'instructions', component: InstructionsPageComponent },\n  {path: 'generator', component: GeneratorPageComponent },\n  {path: 'animation', component: AnimationPageComponent },\n  {path: '', redirectTo: '/instructions', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport Accordion from 'accordion-js';\n\n@Component({\n  templateUrl: './instructions-page.component.html',\n  styleUrls: ['./instructions-page.component.scss']\n})\nexport class InstructionsPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    const accordions = Array.from(document.querySelectorAll('.accordion-container'));\n    new Accordion(accordions, {});\n  }\n\n}\n","<h1>Welcome to the Instructions Page!</h1>\n\n<div class=\"accordion-container\">\n\n    <div class=\"ac\">\n        <h2 class=\"ac-header\">\n            <button class=\"ac-trigger\">What is Grapher.js</button>\n        </h2>\n        <div class=\"ac-panel\">\n            <p class=\"ac-text\">\n                Grapher.js is a website designed to help students visually learning data structures and algorithms.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"ac\">\n        <h2 class=\"ac-header\">\n            <button class=\"ac-trigger\">Instructions for students</button>\n        </h2>\n        <div class=\"ac-panel\">\n            <p class=\"ac-text\">\n                Your teacher should have provided you with a configuration file in format JSON.\n                That file should be used in the <u><b><a routerLink=\"../animation\">Animation Page</a></b></u> to generate the animation.\n\n                Once the configuration is loaded and accepted byt the software, the animation will automatically appear in your screen.\n\n                To understand what each component does, please refer to the next section. \n            </p>\n        </div>\n    </div>\n\n    <div class=\"ac\">\n        <h2 class=\"ac-header\">\n            <button class=\"ac-trigger\">Understanding the components (student)</button>\n        </h2>\n        <div class=\"ac-panel\">\n            <div class=\"ac-text\">\n                There are 3 main components in front of you:\n                <ul>\n                    <li><b>Animation section:</b></li> Here you get the chance to understand the mechanism of an algorithm or to see a data structure \n                    behaves when different methods are called.  \n                    <li><b>Code:</b></li> This part gives you an idea of what line of code corresponds to each operation performed in the animation section. \n                    Further comments are provided in the the comment box.\n                    <li><b>Player bar:</b></li> This component allows you to directly interact with the animation by starting it, stopping and resuming it, \n                    and selecting the animation speed.  \n                </ul>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"ac\">\n        <h2 class=\"ac-header\">\n            <button class=\"ac-trigger\">Instructions for teachers</button>\n        </h2>\n        <div class=\"ac-panel\">\n            <p class=\"ac-text\">Content 3</p>\n        </div>\n    </div>\n\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
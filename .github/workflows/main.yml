<<<<<<< HEAD
name: Build and Deploy Ng App
on: push
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install
    - run: npm install -g @angular/cli > /dev/null
    - run: ng build --prod --output-path=dist --base-href="https://Amantini1997.github.io/NgGrapher/"
    - name: Publish generated content to GitHub Pages
      uses: tsunematsu21/actions-publish-gh-pages@v1.0.1
      with:
          dir: dist
          branch: gh-pages
          token: ${{ secrets.ACCESS_TOKEN }}on: push  
name: Build Angular project  
jobs:  
  build:  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        node-version: [12.x]  
  
    steps:  
      - uses: actions/checkout@v1  
  
      - name: Cache node modules  
        uses: actions/cache@v1  
        with:  
          path: ~/.npm  
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}  
          restore-keys: |  
            ${{ runner.os }}-node-  
      - name: Node ${{ matrix.node-version }}  
        uses: actions/setup-node@v1  
        with:  
          node-version: ${{ matrix.node-version }}  
      - name: npm install and npm run build:ci  
        run: |  
          npm install
          npm install -g @angular/cli > /dev/null
          ng build --prod --output-path=dist --base-href="https://Amantini1997.github.io/NgGrapher/"
      - name: Push Build to Releases  
        uses: ncipollo/release-action@v1  
        with:  
          artifacts: "dist/angular-githubaction/*"  
          token: ${{ secrets.ACCESS_TOKEN }}   
=======
name: Deploy Angular SPA to GitHub Pages # Il nome della Action

on:
  push: 
    branches:   
      - master # La action verrÃ  eseguita in caso di push sul branch master del nostro repository

jobs:
  build:
    runs-on: ubuntu-latest # La action verrÃ  eseguita su l'ultima versione di Ubuntu 
    steps:
    - name: Checkout
      uses: actions/checkout@v2 # Operazione di checkout standard utile per la CI
      with:
        persist-credentials: false
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1 # Setup di Node utilizzando la action https://github.com/actions/setup-node
      with:
        node-version: '10.x' # Nel nostro caso, utilizziamo la versione 10.x di Node
    - name: Build
      run: | # Esecuzione dei comandi di setup e build del progetto Angular, non dimenticando il parametro --base-href nel comando di build!
         npm install -g @angular/cli
         npm install
         ng build --prod --base-href="/redis-patterns-console/"
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v2 # Deploy su GitHub Pages utilizzando la action https://github.com/JamesIves/github-pages-deploy-action
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # Indichiamo l'accesso token creato per essere autenticati correttamente, prelevandolo dalle Secrets
        BASE_BRANCH: master
        BRANCH: gh-pages # Il branch che contiene il progetto pubblicato sulle GitHub Pages
        FOLDER: dist # Folder dove Ã¨ stata eseguita la build del nostro progetto Angular
>>>>>>> 85b0d103747f253545c98b350b39f8bde3345e2d

{"executable":"return [\n    {\n        name: \"enqueue\",\n\t    body: enqueue,\n        params: [\n            {\n                name: \"number to enqueue\",\n                type: \"number\"\n            }\n        ],\n        lines: {\n            start: 0,\n            end: 2\n        }\n    }, \n    {\n        name: \"dequeue\",\n\t    body: dequeue,\n        params: [],\n        lines: {\n                start: 3,\n                end: 7\n            }\n    }, \n    {\n        name: \"isEmpty\",\n\t    body: isEmpty,\n        params: [],\n        lines: {\n            start: 8,\n            end: 10\n        }\n    }, \n    {\n        name: \"peek\",\n\t    body: peek,\n        params: [],\n        lines: {\n            start: 11,\n            end: 15\n        }\n    }\n]\n\nfunction * enqueue(value) {\n    yield 0\n\n\tgrapher.push(value);\n    const lastIndex = grapher.getValues().length - 1;\n    grapher.setNodeModeSelected(lastIndex);\n\n    yield {\n        line: 1,\n        comment: value + \" was added to the bottom of the queue\"\n    }\n\n    grapher.setNodeModeNone(lastIndex);\n}\n\nfunction * dequeue() {\n    yield 3\n\n    grapher.setNodeModeSelected(0);\n\n    yield 4\n\n    const value = grapher.shift();\n    \n  \tyield 5\n\n    yield {\n        line: 6,\n        comment: value + \" was removed from the top of the queue\"\n    }\n}\n\nfunction * isEmpty() {\n    yield 8\n    const valuesCount = grapher.getValues().length;\n\n    yield {\n        line: 9,\n        comment: (valuesCount == 0) \n            ? \"true ( the queue is empty)\"\n            : \"false ( the queue contains \" + valuesCount + \" element\" +( (valuesCount == 1) ? \"\" : \"s\") + \" )\"\n    }\n}\n\nfunction * peek() {\n    yield 11 \n    const values = grapher.getValues();\n    yield 12\n     if (values.length > 0) {\n       \tyield {\n          line: 14,\n          comment: values[0] + \" is at the top of the queue\"\n        }\n\t} else {\n         yield 13\n    }\n}","displayableCodeComments":[{"code":"function enqueue(value) {","comment":""},{"code":" queue &lt;- queue + value","comment":""},{"code":"}","comment":""},{"code":"function dequeue(){","comment":""},{"code":" top &lt;- first element of queue","comment":"copy the first element in a variable called top"},{"code":" remove first element of queue","comment":"delete the first element of the queue"},{"code":" return top","comment":"return value of top"},{"code":"}","comment":""},{"code":"function isEmpty() {","comment":""},{"code":" return length queue &gt; 0 ","comment":""},{"code":"}","comment":""},{"code":"function peek() {","comment":""},{"code":" if queue.isEmpty()","comment":"is the queue empty?"},{"code":" then raise error ","comment":"yes, the queue is empty, ERROR"},{"code":" else return first element of queue","comment":""},{"code":"}","comment":""}],"initialValues":[1,2,3,4],"dataStructure":"BarPlot","nodeType":"Bar"}